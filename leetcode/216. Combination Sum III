class Solution:
    def combinationSum3(self, k: int, n: int) -> List[List[int]]:
            res = []
            candidates=[i for i in range(1,10)]
            def dfs(nums, target, index, path, res):
                if target < 0:
                    return  
                if target == 0:
                    if len(path)==k:
                        if path not in res:
                            res.append(path)
                    return 
                for i in range(0, len(nums)):
                    if nums[i] > target: 
                        break
                    #print(nums,res)
                    dfs(nums[i+1:], target-nums[i], i, path+[nums[i]], res)
            dfs(candidates, n, 0, [], res)
            return res
