# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxSumBST(self, root: TreeNode) -> int:
        self.ans=0
        def helper(root):
            # print(self.ans)
            if not root:
                return True,0,float('inf'),float('-inf')
            l,ls,lmn,lmx=helper(root.left)
            r,rs,rmn,rmx=helper(root.right)
            if l and root.val>lmx and r and root.val<rmn:
                self.ans=max(self.ans,root.val+ls+rs)
                return True,root.val+ls+rs,min(lmn,root.val),max(rmx,root.val)
            else:
                return False,float('-inf'),0,0
        a,b,c,d=helper(root)
        return self.ans
