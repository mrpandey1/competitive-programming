class WordDictionary:

    def __init__(self):
        self.root = {}
        

    def addWord(self, word: str) -> None:
        t=self.root
        for c in word:
            if c not in t:
                t[c] = {}
            t = t[c]
        t['LEAF'] = True   

    def search(self, word: str) -> bool:
        cur = self.root
        self.res = False
        self.dfs(cur,word)
        return self.res
    
    def dfs(self,node,word): 
        
        if not isinstance(node,dict):
            return 
        if word == '':
            if node.get('LEAF'):
                self.res = True
            return
        #recursive case: 
        if word[0] == '.':
            for key in node:
                self.dfs(node[key], word[1:])
        else:
            if word[0] not in node:
                return
            else:
                self.dfs(node[word[0]],word[1:])
        return 
