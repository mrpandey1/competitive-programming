class Solution:
    def __init__(self):
        self.ans=[]
    def splitIntoFibonacci(self, num):
        length = len(num)
        for i in range(1,length):
            for j in range(1,length-i):
                f,s,o=num[:i],num[i:i+j],num[i+j:]
                if self.first_second_sum(f,s,o):
                    for i in self.ans:
                        if int(i)>2147483647:
                            return []
                    return self.ans
        return []
    def first_second_sum(self,f,s,n):
        if ((len(f) > 1 and f[0] == "0") or(len(s) > 1 and s[0] == "0")):
            return False
        sum_ = str(int(f) + int(s))
        if sum_ == n:
            self.ans.append(f)
            self.ans.append(s)
            self.ans.append(sum_)
            return True
        elif n.startswith(sum_):
            self.ans.append(f)
            return self.first_second_sum(s, sum_, n[len(sum_):])
        else:
            try:
                self.ans.pop()
            except:
                pass
            return False
