class Solution:
    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:
        temp=set(wordList)
        if endWord not in temp:
            return 0
        queue=[]
        level=1
        queue.append(beginWord)
        while queue!=[]:
            leng=len(queue)
            for i in range(leng):
                current_word=queue.pop()
                word=list(current_word)
                for j in range(len(word)):
                    original_char=word[j]
                    for c in range(97,123):
                        if word[j]==chr(c):
                            continue
                        word[j]=chr(c)
                        new_word=''.join(word)
                        if new_word==endWord:
                            return level+1
                        if new_word in temp:
                            queue.insert(0,new_word)
                            temp.remove(new_word)
                    word[j]=original_char   
            level+=1
        return 0
