# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:
        a,b=0,0
        temp1=headA
        temp2=headB
        while temp1:
            a+=1
            temp1=temp1.next
        while temp2:
            b+=1
            temp2=temp2.next
        if a-b>0:
            temp1,temp2=headA,headB
        else:
            temp1,temp2=headB,headA
        diff=abs(a-b)
        while diff!=0: 
            temp1=temp1.next
            diff=diff-1
        while temp1!=temp2 and temp1!=None and temp2!=None:
            temp1=temp1.next
            temp2=temp2.next
        if temp1 is None:
            return None
        return temp1
