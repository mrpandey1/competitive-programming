from collections import deque
class Solution:
    
    #Function to detect cycle in an undirected graph.
	def isCycle(self, V, adj):
	    def check(graph,visited,i):
            queue=deque()
            visited[i]=True
            queue.append([i,-1])
            while queue:
                node=queue[0][0]
                parent=queue[0][1]
                queue.popleft()
                for i in graph[node]:
                    if visited[i]==False:
                        visited[i]=True
                        queue.append([i,node])
                    elif parent!=i:
                        return True
            return False
	    visited=[False]*(V)
	    for _ in range(V):
	        if visited[_]==False:
	            if check(adj,visited,_):
	                return 1
	    return 0
